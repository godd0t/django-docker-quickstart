version: '3.9'

services:
  db:
    image: postgres:15.2-alpine
    container_name: "${APP_NAME}_db"
    hostname: "${POSTGRES_HOST:-db}"
    volumes:
      - postgres_data_dir:/var/lib/postgresql/data/
    env_file: .env
    ports:
      - "7432:5432"
    shm_size: 1g
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: "${APP_NAME}_redis"
    command: redis-server
    ports:
      - "6383:6379"
    volumes:
        - redis_data:/data

  backend:
    image: "django-${APP_NAME}"
    container_name: "${APP_NAME}_server"
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/usr/src/app/
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  celery-worker: &celery-worker
    image: "django-${APP_NAME}"
    container_name: "${APP_NAME}_celery_worker"
    volumes:
      - ./src:/usr/src/app/
    env_file: .env
    depends_on:
      - db
      - redis
      - backend
    command: celery -A ${APP_NAME} worker -l info

  celery-beat:
    <<: *celery-worker
    container_name: "${APP_NAME}_celery_beat"
    command: celery -A ${APP_NAME} beat -l info

volumes:
  postgres_data_dir:
  redis_data:
